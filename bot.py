from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, ContextTypes, MessageHandler, filters
import requests
import os
import json

# –ö–ª—é—á–∏ API
YOUGILE_API_KEY = os.getenv('YOUGILE_API_KEY')
BOT_TOKEN = os.getenv('BOT_TOKEN')

# –ë–∞–∑–æ–≤—ã–π URL Yougile API
YOUGILE_BASE_URL = "https://ru.yougile.com/api-v2"

class YougileClient:
    def __init__(self, api_key):
        self.api_key = api_key
        self.headers = {
            'Authorization': f'Bearer {api_key}',
            'Content-Type': 'application/json',
            'Accept': 'application/json'
        }
        print(f"YougileClient –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —Å –∫–ª—é—á–æ–º: {api_key[:10]}...")  # –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞—á–∞–ª–æ –∫–ª—é—á–∞
    
    def get_projects(self):
        """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤"""
        try:
            url = f"{YOUGILE_BASE_URL}/projects"
            print(f"–î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫: {url}")
            print(f"–ó–∞–≥–æ–ª–æ–≤–∫–∏: {self.headers}")
            
            response = requests.get(url, headers=self.headers, timeout=10)
            
            print(f"–°—Ç–∞—Ç—É—Å –∫–æ–¥: {response.status_code}")
            print(f"–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {response.text[:200]}...")  # –ü–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤
            
            if response.status_code == 200:
                data = response.json()
                projects = data.get('content', [])
                print(f"–ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–µ–∫—Ç–æ–≤: {len(projects)}")
                return projects
            else:
                print(f"–û—à–∏–±–∫–∞ API! –°—Ç–∞—Ç—É—Å: {response.status_code}")
                print(f"–ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç: {response.text}")
                return []
                
        except requests.exceptions.RequestException as e:
            print(f"–û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {e}")
            return []
        except Exception as e:
            print(f"–û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
            return []

# –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç Yougile
yougile_client = YougileClient(YOUGILE_API_KEY)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /start"""
    await update.message.reply_text("üîÑ –ó–∞–ø—Ä–∞—à–∏–≤–∞—é –ø—Ä–æ–µ–∫—Ç—ã –∏–∑ Yougile...")
    
    projects = yougile_client.get_projects()
    
    if not projects:
        await update.message.reply_text(
            "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–µ–∫—Ç—ã.\n\n"
            "–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n"
            "‚Ä¢ –ù–µ–≤–µ—Ä–Ω—ã–π API-–∫–ª—é—á\n"
            "‚Ä¢ –ö–ª—é—á –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω\n"
            "‚Ä¢ –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ API\n"
            "‚Ä¢ –ù–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ –≤ Yougile"
        )
        return
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤
    keyboard = [[project['title']] for project in projects]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–µ–∫—Ç—ã –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç
    context.user_data['projects'] = {project['title']: project['id'] for project in projects}
    
    await update.message.reply_text(
        "‚úÖ –ü—Ä–æ–µ–∫—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã! –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç:",
        reply_markup=reply_markup
    )

async def handle_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    await update.message.reply_text(f"–í—ã –≤—ã–±—Ä–∞–ª–∏: {update.message.text}")

def main():
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    print("=" * 50)
    print("–ü–†–û–í–ï–†–ö–ê –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø:")
    print(f"BOT_TOKEN: {'–ï—Å—Ç—å' if BOT_TOKEN else '–ù–µ—Ç'}")
    print(f"YOUGILE_API_KEY: {'–ï—Å—Ç—å' if YOUGILE_API_KEY else '–ù–µ—Ç'}")
    
    if YOUGILE_API_KEY:
        print(f"–î–ª–∏–Ω–∞ –∫–ª—é—á–∞: {len(YOUGILE_API_KEY)} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"–ù–∞—á–∞–ª–æ –∫–ª—é—á–∞: {YOUGILE_API_KEY[:10]}...")
    
    print("=" * 50)
    
    # –£–¥–∞–ª—è–µ–º –≤–µ–±—Ö—É–∫ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
    try:
        delete_url = f"https://api.telegram.org/bot{BOT_TOKEN}/deleteWebhook"
        response = requests.get(delete_url)
        print("–£–¥–∞–ª–µ–Ω–∏–µ –≤–µ–±—Ö—É–∫–∞:", response.json())
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤–µ–±—Ö—É–∫–∞:", e)
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    app = Application.builder().token(BOT_TOKEN).build()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text))
    
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ä–µ–∂–∏–º–µ polling...")
    app.run_polling(drop_pending_updates=True)

if __name__ == '__main__':
    main()
